sudo usermod -a -G dialout $USER
sudo usermod -a -G tty $USER
sudo apt remove brltty -y
sudo reboot
ls /dev/ttyUSB* /dev/ttyACM*        ####shows error
sudo apt update
source /opt/ros/jazzy/setup.bash
sudo apt install -y ros-jazzy-rmw-cyclonedds-cpp
sudo apt install -y python3-colcon-common-extensions
sudo apt install -y python3-serial
sudo apt install -y libfuse2
sudo apt install -y unzip
echo "source /opt/ros/jazzy/setup.bash" >> ~/.bashrc

cd ~/Downloads
wget https://downloads.arduino.cc/arduino-ide/arduino-ide_2.3.2_Linux_64bit.AppImage
chmod +x arduino-ide_2.3.2_Linux_64bit.AppImage
./arduino-ide_2.3.2_Linux_64bit.AppImage

             or

cd ~/Downloads
# Download Arduino IDE
wget https://downloads.arduino.cc/arduino-ide/arduino-ide_2.3.3_Linux_64bit.zip
# Unzip
unzip arduino-ide_2.3.3_Linux_64bit.zip
# Move to /opt
sudo mv arduino-ide_2.3.3_Linux_64bit /opt/arduino-ide
# Fix sandbox permissions
sudo chown root:root /opt/arduino-ide/chrome-sandbox
sudo chmod 4755 /opt/arduino-ide/chrome-sandbox
# Create link (ignore if exists)
sudo ln -sf /opt/arduino-ide/arduino-ide /usr/local/bin/arduino-ide

#in terminal type
arduino-ide


#in files->preferences->additional board manager    paste
https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
#in tools->board manger    type
ESP32  and select esp32 by expressif    #install
#in sketch->mange libraries    type
micro_ros_arduino  and select micro_ros_arduino ny microros  #install
tool->upload speed  115200
#in borad manager select
port -> /dev/ttyACM0 (or /dev/ttyUSB0)
board -> ESP32 dev module



#open new terminal

mkdir -p ~/microros_ws/src
cd ~/microros_ws/src
git clone -b jazzy https://github.com/micro-ROS/micro_ros_setup.git
git clone -b jazzy https://github.com/micro-ROS/micro-ros-agent.git
cd ~/microros_ws
colcon build
#if error do 58 and redo colcon build
git clone -b jazzy https://github.com/micro-ROS/micro_ros_msgs.git
source install/setup.bash
echo "source ~/microros_ws/install/setup.bash" >> ~/.bashrc





source /opt/ros/jazzy/setup.bash
source ~/microros_ws/install/setup.bash
unset RMW_IMPLEMENTATION
unset ROS_DOMAIN_ID
ros2 run micro_ros_agent micro_ros_agent serial --dev /dev/ttyACM0 -b 115200



******do in a new terminal****
source /opt/ros/jazzy/setup.bash
source ~/microros_ws/install/setup.bash
unset RMW_IMPLEMENTATION
unset ROS_DOMAIN_ID
ros2 topic list
ros2 topic echo /chatter


cd ~/microros_ws/src
ros2 pkg create --build-type ament_python second
cd second/second
gedit sub.py

**** code for subcriber***8

#!/usr/bin/env python3
import rclpy
from rclpy.node import Node
from std_msgs.msg import String

class ESP32Subscriber(Node):
    def __init__(self):
        super().__init__('esp32_subscriber')
        self.subscription = self.create_subscription(
            String,
            'chatter',
            self.listener_callback,
            10)
        self.get_logger().info('ESP32 Subscriber Node has been started')

    def listener_callback(self, msg):
        self.get_logger().info('Received: "%s"' % msg.data)

def main(args=None):
    rclpy.init(args=args)
    esp32_subscriber = ESP32Subscriber()
    rclpy.spin(esp32_subscriber)
    esp32_subscriber.destroy_node()
    rclpy.shutdown()

if __name__ == '__main__':
    main()


cd ~/microros_ws
colcon build 
source install/setup.bash
source /opt/ros/jazzy/setup.bash
source ~/microros_ws/install/setup.bash
unset RMW_IMPLEMENTATION
ros2 run second chatter




